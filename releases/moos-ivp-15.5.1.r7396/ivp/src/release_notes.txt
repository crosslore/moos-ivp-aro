
pMarineViewer
  - Added support for the "mokai" vehicle type, for now rendered just as 
    a kayak
  - Added support for the colorname "empty" as an alias for "invisible"

pNodeReporter
  - Added support for the "mokai" vehicle type
  
uXMS
 - fixed bug in uXMS where timestamps were rendered in full UTM time 
   rather than time since the start of the MOOSDB.

pHelmIvP

 - Augmented behaviors and the helm to produce new information about 
   updates. The Helm publishes IVPHELM_UPDATEVARS to indicate which MOOS 
   variables are involved in behavior updates. This variable is published 
   each time the list changes, so typically only once upon startup. The 
   Helm also now publishes IVPHELM_UPDATE_RESULT for each MOOS variable 
   posted involved with a behavior update. It will show the result of 
   the update.

 - Augmented the Attractor behavior to use the IvPContactBehavior class

======================================================================

pHostInfo
 - augmented pHostInfo to recognized the addtional "WiFi" interface, 
   in addition to "Wi-Fi" with the dash

uFldNodeComms
 - Bug fix - allow messages from Vehicle A to B to be sent in clusters, all 
   at the same time, if min_msg_interval is zero. 

pMarineViewer
 - Added support for VIEW_WEDGE objects
 - Added support left mouse clicks to include a new macro UP_VNAME_CLOSEST 
   and VNAME_CLOSEST which represent the string values of the vehicle name 
   closest to the mouse click. This allows one to configure to say return 
   a vehicle by clicking on it.

lib_geometry
 - Added the VIEW_WEDGE object

pHelmIvP

 - Fixed a bug that would allow behaviors with duplicate names to be spawned

 - Augmented the Helm appcast output to include a list of all Spawnable 
   behaviors, i.e. behavior templates, with a running tab of attempts to spawn
   and total successful spawnings

 - Fixed the ability to re-start the helm mid-mission with "RESTART_HELM=type1". 
   Results in the destruction and re-instantiation of the set of behaviors.

 - A helm restart will result in the publishing of "IVPHELM_RESTARTED=true" upon
   completion of the restart.

 - The variables IVPHELM_BHV_CNT and IVPHELM_BHV_CNT_EVER are now only published
   when the value changes, NOT on every iteration regardless of value. If you
   have anything use these variables as a form of "heartbeat" indication, you
   should instead use the one variable IVPHELM_STATE recommended for this purpose
   and guaranteed to be published on each iteration regardless of value.

 - Fixed a bug in behavior spawning where a spawned behavior was not getting the 
  "us" field set, i.e., the name of ownship, which is set to the name of the
  MOOS community found in the .moos mission file. All spawned behaviors now
  have this field set upon spawning.

 - Modified IvPBehavior to ignore the "name" parameter during behavior updates. 
  Previously it was indeed not acted on, but threw a update warning. The name 
  parameter is used solely to identify which behavior the update should be applied
  to, but the name is not actually updated.

o alogview
  
  - Fixed bug that would not reset the view center gravity up on arrow-key hits

o BHV_Waypoint

  - Added ability to set the label color hint for the seglist




15.X Release Notes
==============================================================================
15.5 Release Notes

o app_alogview
  - A major re-write of the previously existing alogview tool for analyzing
  pos-tmission data in the typical .alog file format produced by pLogger.

  - One of the biggest changes addresses the run-time memory size of alogview
  as it loads data from several vehicles with large alog files. The previous
  alogview tool would load *all* data from all vehicles upon startup. This 
  could overwhelm the program and hang as the memory usage out-grew the RAM
  on modest to low-memory machines. The current implementation splits the 
  log file into separate temporary files and grabs the data at run time from
  these files as-needed.
  - The GUI layout has changed to support the helm-state and IvPFunction 
  views as separate pop-up windows. THe user doesn't seen them when not 
  interested, and the user may bring up as many as desired as needed.
  - One or more Variable-History scopes may be opened on any subset of MOOS
  variables across all vehicles. For both string and double data.
  - Numerical log plots in the bottom of the main window may be synced to 
  be on the same y-axis scale is desired.
  - More control over automatic replay speed and refresh rate. Replay speed
  limited by what is being draw/calculate between iterations, and by the 
  refresh rate. Viewer will show requested vs. actual refresh rate.
  - Command line switches for choosing initial startup conditions including
  initial logged variables, pan, zoom, and initial start time.
  - Command line switch for specifying a time range, allowing the tool to 
  load less memory into RAM. Previously only possible by first clipping the
  alog files. 
  - The IvPFunction viewer popup window will now show all behaviors with the 
  current priority weight next to each. User can toggle between individual 
  and collective IvP function view mode.
  - Support for alternate navigation solutions, so playback may render the
  vehicle's ground truth and on-board navigation solution simultaneously.
  - Many other bug-fixes


o uFunctionVis 
  Fixed glitch that preveneted the Behaviors pull-down menu from appearing 
  upon startup

o pMarineViewer
  - Fixed problem where MVIEWER_LCLICK was not being published correctly
  - Added ability to "clear" geometric objects with PMV_CLEAR subscription
  - Fixed problem in pMarineViewer where the background image defaulted to
    the MIT campus if left unspecified, and wouldn't draw at all if the 
    MIT image was removed from ivp/data/. It now launches and draws fine if
    no background image is found or if left unspecified.
  
o uFldNodeBroker
  - Fixed a bug that could prevent node connections in some cases. These cases
  were when pShare started sufficiently later than uFldNodeBroker, perhaps missing
  the cluster of initial config messages published by uFldNodeBroker

o pDeadManPost (New App)

  - The pDeadManPost application that allows the user to arrange
configured posts to the MOOSDB in the absence of another event. There
are many conceivable uses for this, but here are a few of the ideas
that motivated this app:

  - On a shoreside community, a dead-man post can be made to trigger
    an alert when a deployed vehicle is out of contact after some
    period of time. The alert could be a posting to trigger an alarm
    .wav file or a spoken alert message through iSay.

  - On a vehicle, a dead-man post can be made to put a unmanned
    surface vehicle in a station-keeping mode if comms to the
    shoreside command and control goes silent for some period of time.

o lib_geometry 
  - Added bearingMinMaxToPoly in GeomUtils.cpp
  - Added ability to delete a vertex by index number in XYSegList
    void XYSegList::delete_vertex(unsigned int);
  - Added a check for a turn left given three points in AngleUtils.cpp
    bool threePointTurnLeft(double, ..., double);
  - Added the ConvexHullGenerator class for determining a convex hull in 
    the form of an XYPolyon, given a set of points in the x-y plane


o uSimMarine
  - Added support for differential thrust mode
  - Bug fix - negative thrust was not working properly
  - Added support for halting the vehicle propagation when OBSTACLE_HIT=1 is
  posted.

o pNodeReport
  - Added ability to detect when in reverse thrust mode and note it in the
  NODE_REPORT

o pHelmIvP 
  - Upon unfound behavior, posts MALCONFIG and remains up vs. quitting
  - Modified to not post a helm decision for one iteration if there are no
    active behaviors. Relevant in situations where the helm is transitioning
    between modes, end flags trigger new behaviors/mode but for one transiion
    iteration no behaviors are active. Rather than post desired speed of zero, 
    helm just posts no new decision for one iteration. If an all-stop situation
    is encountered in the helm, the helm will post desired speed of zero 
    imediately.

o BHV_OpRegion
  - Added optional opregion_poly_var config parameter that names a MOOS
  variable that will be posted containing the prevailing OpRegion polygon
  upon startup
  - Fixed posting of VIEW_POLYGON representing the OpRegion poly, to now
  have a disctinct label, so successive postings will result in a redraw
  of the polygon. A re-posting may happen if the OpRegion poly is updated
  through the updates variable.

o BHV_Waypoint
  - supporting config parameter currix=N which allows the behavior to immediately
  regard the current waypoint index to be set to N. Normally upon startup, or upon
  an update to the waypoints, the index is set to zero, the first waypoint. This
  parameter allows for an override of that policy.

  - An optional MOOS variable may be named via the wpt_dist_to_next parameter
  which, if non-empty, results in the posting to this variable of the linear
  distance to the next waypoint from the vehicle's current position. 
  This allows other MOOS apps or behaviors to possibly modify their function, e.g.,
  either changing speed or toggling a sensor as a turn is approached.
  This values changes to -1 in the idle state.

  - An optional MOOS variable may be named via the wpt_dist_to_prev parameter
  which, if non-empty, results in the posting to this variable of the linear
  distance to the previous waypoint from the vehicle's current position. 
  This allows other MOOS apps or behaviors to possibly modify their function, e.g.,
  either changing speed or toggling a sensor after a waypoint has been achieved.
  This values changes to -1 in the idle state.

  - The wptflag parameter has been augmented to allow for macros $(NX), $(NY), 
  $[NX], and $[NY] to be expanded to the x-y components of the next waypoint.

  - An optional config parameter, crs_spd_zaic_ratio=N, where N is in the 
 range of [1,99]. This sets the weight of the heading portion of the heading-spd
 zaic created in the ZAIC (default) mode for IvP function creation. The corresponding
 speed weight is implied to be 100-N, so the two always add to 100 and neither is
 below 1 or greater than 99. The default is 50-50.

o aloggrep
  - Added --no_comments (or -nc) command line arg to allow for the output 
    to discard the comments typically found at the top of an alog file
  - Added --no_report (or -nr) command line arg to allow for the output 
    to not produce the summary report normally generate to stdout during
    normal operation.
  - Added the --quiet (or -q) command which is essentially a shortcut for 
    --no_comments and --no_report
  - Added ability to filter out lines that don't begin with a number. These
    lines are typically from an entry with carriage returns. The primary 
    offender in this regard is DB_VARSUMMARY. If DB_VARSUMMARY is on the list
    of variables to retain, then badlines are not filtered out. Otherwise
    they are filtered out automatically. The automatic filtering out of badlines
    can be overridden with the --keep_badlines/-kb command line switch.

o aloggrep
  - Added ability to handle lines that don't begin with a number. These
    lines are typically from an entry with carriage returns. The primary 
    offender in this regard is DB_VARSUMMARY. If DB_VARSUMMARY is on the list
    of variables to removed, then badlines are now properly removed along
    with the DB_VARSUMMARY line. Otherwise the badlines are retained.

o alogscan
  - Added ability to handle lines that don't begin with a number. These
    lines are typically from an entry with carriage returns. The primary 
    offender in this regard is DB_VARSUMMARY. 

o alogsort
  - Added ability to handle lines that don't begin with a number. These
    lines are typically from an entry with carriage returns. The primary 
    offender in this regard is DB_VARSUMMARY. 

o alogsplit
  - Added ability to handle lines that don't begin with a number. These
    lines are typically from an entry with carriage returns. The primary 
    offender in this regard is DB_VARSUMMARY. 


o uSimMarine
  - Supports reverse thrust (DESIRED_THRUST < 0)
  - Supports differential thrust mode
  - Essentially allows the vehicle to traverse backwards using normal waypoint
    behaviors


---------------------------------------------------------------------------


14.7.x

o MOOS Emacs Mode
  Modified to support MaxDepth behavior
  Modified to fix bug in supporting ConstantHeading Behavior

o Documentation
  Added documentation for MaxDepth behavior

o pHelmIvP
  MaxDepth behavior modified to not require a duration parameter

---------------------------------------------------------------------------

o BHV_AvoidObstacles
 
o New application: pObstacleMgr

o New application: iDiffThrust




Modified to pass command line arguments to MOOSApp superclass
pDeadManPost
pEchoVar
pHelmIvP
pHostInfo
pMarinePID
pMarineViewer
pNodeReporter
pSafetyRetreat
pSearchGrid
pXRelay
uFldBeaconRangeSensor
uFldCollisionDetect
uFldContactRangeSensor
uFldGenericSensor
uFldHazardMetric
uFldHazardMgr
uFldHazardSensor
uFldMessageHandler
uFldNodeBroker
uFldNodeComms
uFldPathCheck
uFldScope
uFldShoreBroker
uFldWrapDetect
uFunctionVis
uHelmScope
uLoadWatch
uMAC
uMACView
uPlotViewer
uTermCommand
uXMS




=================================================================
14.7.1

o More documentation for each helm behavior to provide example 
  configuration blocks

o Modified uPlayback to allow for buiding on Ubuntu 14.4 systems

o Modified (Toby Schneider) MOOSGeodesy wrapper to bring back the
  LocalGrid translations from the Paul Newman code.


