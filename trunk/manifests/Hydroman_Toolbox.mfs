//====================================================================
module   = iBlueROV_CommandAndControl
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = Sending MOOS commands to BlueROV2 via Mavlink.

synopsis = iBlueROV_CommandAndControl is a MOOS app that can be run on
the Raspberry Pi Companion Computer onboard the BlueROV2. The app is
able to send MOOS based commands to BlueROV2 via Mavlink. MOOS
commands include arming/disarming, mode changing (i.e. MANUAL, AUTO,
GUIDED, DEPTHHOLD, STABILIZED modes) and, desired depth, heading and
speed commands. The autonomous modes of BlueROV2 (i.e. AUTO and GUIDED
modes) are not stable at the time of writing; therefore, desired
commands are sent in DEPTHHOLD mode as thrust inputs, computed by a
low level control system within iBlueROV_CommandAndControl. This app
was initially developed to send commands to BlueROV by MIT’s
Autonomous Surface Vehicle (ASV), REx4. The BlueROV was connected to
REx4 using an automated winch and MOOS commands were sent from REx4’s
MOOSDB to the ROV’s MOOSDB using pShare.

distro   = https://github.mit.edu/AUVLab
group    = BlueROV, Mavlink, Drivers, ASV-ROV
borndate = 190110
doc_url  = https://github.mit.edu/AUVLab

//====================================================================
module   = iBlueROV_DataReceiver
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = Receiving navigation data from BlueROV2 via Mavlink.

synopsis = iBlueROV_DataReceiver is a MOOS app that can be run on the
Raspberry Pi Companion Computer onboard the BlueROV2. The app receives
navigation information from BlueROV2 (such as current depth, heading
and throttle) and publishes them in MOOSDB. This app was initially
developed to receive navigation information from a BlueROV2 to MIT’s
Autonomous Surface Vehicle (ASV), REx4. The BlueROV was connected the
REx4 using an automated winch and navigation information published in
ROV’s MOOSDB were shared with REx4’s MOOSDB using pShare.

distro   = https://github.mit.edu/AUVLab
group    = BlueROV, Mavlink, Drivers, ASV-ROV
borndate = 190110
doc_url  = https://github.mit.edu/AUVLab

//====================================================================
module   = pHydroMAN_BasicModel
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A hydrodynamic model aided navigation system for AUVs.

synopsis = pHydroMAN_BasicModel is one of the core apps of Hydroman
Toolbox. It uses the last GPS update, propeller RPM, vehicle roll,
pitch, heading angles and control surface angles received from AUV's
frontseat, and computes linear velocities of the AUV in both
body-fixed and earth-fixed reference frames (i.e. u, v, w and xdot,
ydot and zdot). The dynamic model based localization solution is also
computed for low-cost AUVs with no DVL, LBL/USBL or INS. The
hydrodynamic parameters of the AUV are to be configured in the
configuration file.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Sensors
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = pHydroMAN_DVLProcessor
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A MOOS app that configures a DVL for under-ice AUV navigation.

synopsis = pHydroMAN_DVLProcessor is an under-ice navigation related
app within Hydroman Toolbox. It uses surface ice drifting speed &
heading received from top-side (i.e. ice camp) to compensate the
ice-tracking DVL measurements for ice motion. The app also gives the
capability to dynamically re-configure the axis frame of the DVL from
top-side via a hydroman_engineering DCCL message (this can be useful
if the DVL was changed from downward facing to upward facing).

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Sensors, DVL, Under-ice
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = pHydroMAN_LBLProcessor
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A MOOS app that corrects the time-lag of an acoustic position fix.

synopsis = pHydroMAN_LBLProcessor is one of the acoustic positioning
related apps of Hydroman Toolbox. The apps is able to extrapolate
time-lagged acoustic position updates (e.g. LBL or USBL) and correct
their co-variance matrix to the current time-stamp using the vehicle
dynamic model. This is useful for long range and two-way transmission
acoustic positioning systems with time delays/lags.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Sensors, LBL, Acoustic-tracking
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = pHydroMAN_ModelCalibrator
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A MOOS app that calibrates the basic AUV dynamic model in real-time.

synopsis = pHydroMAN_ModelCalibrator MOOS app calibrates the basic
model based localization solution (i.e. the output from
pHydroMAN_BasicModel) to the current operating environment and
counteracts the drift in model based position when reliable acoustic
position fixes are available. The app posts the calibrated model based
AUV velocity and position solution. It is able to process time-lagged
acoustic position updates if required.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Sensors
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = pHydroMAN_SensorFusion
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = An EKF based sensor fusion app for AUV navigation

synopsis = pHydroMAN_SensorFusion is one of the core apps of Hydroman
Toolbox, which fuses navigation sensor measurements (i.e. including
DVL bottom/ice – track measurements, acoustic position updates and INS
data) with a vehicle dynamic model to compute a low-drift localization
and navigation solution. Sensor fusion and state estimation is
achieved with an EKF, and a secondary EKF is in place to estimate the
sensor error states (i.e. to estimate bias errors of DVL, INS and
dynamic model). The essential purpose of this app is similar to that
of the pNav code written by Prof. Paul Newman.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Sensors, Fusion, EKF
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = uSimDVL
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A DVL simulator for navigation simulations

synopsis = uSimDVL is a simulation utility of Hydroman Toolbox, that
computes and posts DVL velocity measurements of a simulated AUV. The
app is configurable for DVL bottom-tracking, ice-tracking and
water-tracking modes. The DVL update frequency, standard deviation and
bias error can be set from the configuration file.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Simulation, DVL
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = uSimLBL
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A simulator of an LBL system for navigation simulations

synopsis = uSimLBL is a simulation utility of Hydroman Toolbox, that
publishes simulated acoustic position fixes and error co-variance
information for a simulated AUV. A position update frequency and/or
update time-lag can be set in the configuration file. The standard
deviation and bias error of the LBL position fixes are also
configurable.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Simulation, LBL, USBL
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = uSimPhinsINS
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = An IxBlue INS simulator for navigation simulations

synopsis = uSimPhinsINS is a simulation utility of Hydroman Toolbox,
which simulates IxBlue PHINS 3 INS unit. The app publishes
acceleration, velocity, attitude and measurement uncertainty data for
the simulated AUV using the same output format as iHydroMAN_PHINS
app. The standard deviation, bias error and scale error of
acceleration measurement are configurable.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Simulation, INS, IxBlue
borndate = 190110
doc_url  = https://github.mit.edu/lamss

//====================================================================
module   = uSimReplayPCAP
type     = MOOS App
author   = Supun Randeni
contact  = supun@mit.edu
org      = MIT
thumb    = A MOOS app that can replay a PCAP file over UDP.

synopsis = uSimReplayPCAP is a simulation utility of Hydroman Toolbox
that can replay a *.PCAP file (packet capture file) over UDP. The
location of the PCAP file, IP address and port are configurable. This
utility tool can be useful for development and testing of drivers that
phrase data received over UDP.

distro   = https://github.mit.edu/lamss
group    = Navigation, Localization, Hydroman, Simulation, DVL
borndate = 190110
doc_url  = https://github.mit.edu/lamss

