//====================================================================
module   = iAHRS
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
thumb    = A driver for the MicroStrain 3DM-GX1 AHRS unit.

synopsis = iAHRS is a driver for the MicroStrain 3DM-GX1 AHRS unit and
  is based on the earlier Crossbow AHRS driver (iINS) written by Paul
  Newman.  NB: I have made a particular effort to retain as many of
  the conventions of the original Crossbow driver as possible to save
  confusion.

distro   = TBD
group    = Mission Systems, Drivers, Sensors
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pAcommsSim
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = NVIDIA Optix 5.1.1, NVIDIA CUB 1.8.0, Arrayfire 3.6.2, CUDA 10.2,
  Morse, JSON for modern C++

thumb    = a GPU-accelerated multi-vehicle acomms simulator

synopsis = pAcommsSim is a GPU-accelerated multi-vehicle acoustic
  communications simulator intended for shallow water, iso-velocity
  waveguides and general 3D bathymetry. The simulator uses Gaussian
  beams and straight-ray propagation to compute 3D range-dependent CW
  transmission losses and time-domain responses between swarms of
  underwater nodes. The simulator publishes time-domain responses and
  normalised channel impulse responses via binary and JSON message
  formats respectively with a configurable number of arrivals. 
  pAcommsSim is designed to work with the MORSE robotics simulator in
  conjunction with Mission Systems customisations and an NVIDIA GPU.
  Future enhancements will include a configurable dynamic sea surface,
  per-ray Doppler shift for mobile nodes, and arbitrary 3-D sound
  speed profiles using piecewise-constant approximations.

distro   = TBD
group    = Mission Systems, Simulation, Communications
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pCamera
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = OpenCV, Morse
thumb    = A MOOS video display application

synopsis = pCamera is a simple application that subscribes to binary
  rgba frames and displays them using OpenCV. Currently, we use
  straight binary encoding for the images, but in the future will be
  switching to Cap'n-Proto serialisation and giving the option
  for grey-scale formats etc as well as using a proper header
  structure with each message (probably emulating the existing ROS
  message format).

distro   = TBD
group    = Mission Systems, Drivers, Sensors, Visualization
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pSSView
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = libSDL2, pSonarSim, Morse
thumb    = A viewer for the pSonarSim application

synopsis = pSSView is a viewer for the pSonarSim application that uses
  the SDL2 library to plot simulated sidescan data in a continuously
  scrolling waterfall format. Block gain and time-varying gain are set
  via the MOOS configuration block. Messages are currently straight
  binary, but will be transitioning to Cap'n proto in the next
  release. Displayed intensities are scaled in dB.

distro   = TBD
group    = Mission Systems, Simulation, Visualization
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pLidarSim
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = NVIDIA Optix 5.1.1, Arrayfire 3.6.2, CUDA 10.2, Morse
thumb    = GPU-accelerated lidar simulator

synopsis = pLidarSim is a GPU-accelerated lidar simulator capable of
  handling complex scenes, dynamic objects, surface textures and large
  numbers of beams from multiple lidars in real-time. Currently, the
  simulated point data is sent as 64-bit binary PCL PointXYZRGBA
  values with no header. pLidarSim requires the use of Mission Systems
  customisations to the Morse Modular Open Robots Simulation Engine to
  replicate the game engine scenegraph in GPU memory.

distro   = TBD 
group    = Mission Systems, Sensors, Simulation
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pSonarSim
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = NVIDIA Optix 5.1.1, NVIDIA CUB 1.8.0, Arrayfire 3.6.2, CUDA 10.2, Morse,
  JSON for modern C++

thumb    = GPU-accelerated sonar sim to predict time-domain sonar returns

synopsis = pSonarSim is a GPU-accelerated sonar simulator which uses
  Gaussian beam theory to predict the time-domain sonar returns from
  complex objects in the water column (including arbitrary 3-D bottom
  meshes). pSonarsim supports a range of bottom types via both
  image-based and procedural texturing and configurable reflection
  coefficients. 3-D objects of arbitrary complexity can be positioned
  on the bottom (currently this is done by the Blender Game Engine,
  but we are anticipating an Unreal Engine 4 transition path in the
  near future) pSonarSim produces a variety of outputs in both JSON
  and straight binary formats, depending on the configuration block
  settings.

distro   = TBD 
group    = Mission Systems, Sensors, Simulation
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pCloud
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = PCL 1.8.0, JSON for modern C++
thumb    = MOOS App for displaing real and simulated point cloud data

synopsis = pCloud is a MOOS app which uses the PCL library to display
  real and simulated point cloud data in a variety of formats in real
  time. The number of point clouds displayed simulataneously is set
  via the configuration block. When used with Mission Systems Morse
  customisations, the view point can be arranged to track the
  currently selected Morse camera.

distro   = TBD 
group    = Mission Systems, Sensors, Visualization
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = iPX4
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = PX4 software
thumb    = MOOS interface to PX4 control software

synopsis = iPX4 is a MOOS interface to the popular PX4 control
  software which can operate in both real and simulation (SITL) modes
  via either serial or UDP communications. Among other things, iPX4
  generates standard MOOS NAV messages based on PX4 Mavlink telemetry
  data and is also capable of commanding the PX4 controller in
  offboard (backseat) mode to implement full MOOS-IvP autonomy on air
  platforms.

distro   = TBD 
group    = Mission Systems, Drivers
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pMavlink
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = Mavlink, JSON for modern C++
thumb    = Translation layer between MOOS and PX4 software

synopsis = pMavlink is a translation layer between MOOS and PX4
  software which is used in conjunction with iPX4 to handle Mavlink
  data streams.

distro   = TBD 
group    = Mission Systems, Drivers
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pOctree
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = PCL 1.8.0
thumb    = Convert real or simulated point cloud data into 3-D maps

synopsis = pOctree uses PCL octree functionality to turn either real
  or simulated point-cloud data into 3-D maps. In addition to
  optionally displaying the Octree structure at a selected level, it
  uses PCL ray-casting functionality to do fast spatial querying to
  determine the proximity of previously detected objects in given
  directions.

distro   = TBD 
group    = Mission Systems, Sensors
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pRealSense
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = OpenCV, PCL 1.8.0, librealsense2
thumb    = Realsense depth camera MOOS driver for MOOS.

synopsis = iRealSense is a Realsense depth camera driver for MOOS capable of
capturing both imagery and point clouds. Multiple cameras are supported by
specifying serial numbers for hardware in each MOOS configuration block. 

distro   = TBD 
group    = Mission Systems, Drivers
doc_url  = https://github.com/mission-systems-pty-ltd

//====================================================================

module   = pGridViewer
type     = MOOS App
author   = David Battle
contact  = david.battle@missionsystems.com.au
org      = Mission Systems Pty Ltd
depends  = PCL 1.8.0
thumb    = A MOOS viewer for Octree structures constructed from real or simulated point cloud data.

synopsis = pGridViewer is a MOOS viewer for Octree structures
  constructed from real or simulated point cloud data. To display very
  large maps, pGridViewer dynamically adjusts the displayed level to
  achieve a configurable minimum frame rate. When used with Mission
  Systems Morse customisations, the view point can be arranged to
  track the currently selected camera. Unlike pOctree, pGridViewer
  does not support spatial queries.

distro   = TBD 
group    = Mission Systems, Visualization, Simulation
doc_url  = https://github.com/mission-systems-pty-ltd
